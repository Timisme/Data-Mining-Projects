{"id": 34, "text": "This makes it harder to understand the behavior of the function tf.scatter_add in case indices is a matrix. Specifically, what is the difference between tf.scatter_add and tf.scatter_nd when indices is a matrix.  This will raise an error that only sequential or functional models can be saved model.save('custom_model.h5')", "annotations": [{"label": 4, "start_offset": 0, "end_offset": 4, "user": 1}, {"label": 4, "start_offset": 5, "end_offset": 10, "user": 1}, {"label": 4, "start_offset": 11, "end_offset": 13, "user": 1}, {"label": 4, "start_offset": 14, "end_offset": 20, "user": 1}, {"label": 4, "start_offset": 21, "end_offset": 23, "user": 1}, {"label": 4, "start_offset": 24, "end_offset": 34, "user": 1}, {"label": 4, "start_offset": 35, "end_offset": 38, "user": 1}, {"label": 4, "start_offset": 39, "end_offset": 47, "user": 1}, {"label": 4, "start_offset": 48, "end_offset": 50, "user": 1}, {"label": 4, "start_offset": 51, "end_offset": 54, "user": 1}, {"label": 4, "start_offset": 55, "end_offset": 63, "user": 1}, {"label": 2, "start_offset": 64, "end_offset": 78, "user": 1}, {"label": 4, "start_offset": 79, "end_offset": 81, "user": 1}, {"label": 4, "start_offset": 82, "end_offset": 86, "user": 1}, {"label": 4, "start_offset": 87, "end_offset": 94, "user": 1}, {"label": 4, "start_offset": 95, "end_offset": 97, "user": 1}, {"label": 4, "start_offset": 98, "end_offset": 99, "user": 1}, {"label": 4, "start_offset": 100, "end_offset": 106, "user": 1}, {"label": 4, "start_offset": 108, "end_offset": 120, "user": 1}, {"label": 4, "start_offset": 122, "end_offset": 126, "user": 1}, {"label": 4, "start_offset": 127, "end_offset": 129, "user": 1}, {"label": 4, "start_offset": 130, "end_offset": 133, "user": 1}, {"label": 4, "start_offset": 134, "end_offset": 144, "user": 1}, {"label": 4, "start_offset": 145, "end_offset": 152, "user": 1}, {"label": 2, "start_offset": 153, "end_offset": 167, "user": 1}, {"label": 4, "start_offset": 168, "end_offset": 171, "user": 1}, {"label": 2, "start_offset": 172, "end_offset": 186, "user": 1}, {"label": 4, "start_offset": 186, "end_offset": 190, "user": 1}, {"label": 4, "start_offset": 191, "end_offset": 198, "user": 1}, {"label": 4, "start_offset": 199, "end_offset": 201, "user": 1}, {"label": 4, "start_offset": 202, "end_offset": 203, "user": 1}, {"label": 4, "start_offset": 204, "end_offset": 210, "user": 1}, {"label": 4, "start_offset": 213, "end_offset": 217, "user": 1}, {"label": 4, "start_offset": 218, "end_offset": 222, "user": 1}, {"label": 4, "start_offset": 223, "end_offset": 228, "user": 1}, {"label": 4, "start_offset": 229, "end_offset": 231, "user": 1}, {"label": 4, "start_offset": 232, "end_offset": 237, "user": 1}, {"label": 4, "start_offset": 238, "end_offset": 242, "user": 1}, {"label": 4, "start_offset": 243, "end_offset": 247, "user": 1}, {"label": 4, "start_offset": 248, "end_offset": 258, "user": 1}, {"label": 4, "start_offset": 259, "end_offset": 261, "user": 1}, {"label": 4, "start_offset": 262, "end_offset": 272, "user": 1}, {"label": 4, "start_offset": 273, "end_offset": 279, "user": 1}, {"label": 4, "start_offset": 280, "end_offset": 283, "user": 1}, {"label": 4, "start_offset": 284, "end_offset": 286, "user": 1}, {"label": 4, "start_offset": 287, "end_offset": 292, "user": 1}, {"label": 2, "start_offset": 293, "end_offset": 322, "user": 1}], "meta": {}}
{"id": 35, "text": "Now, I'm ready to move this to a serving environment (via Sagemaker, but that just implements tensorflow.serving).", "annotations": [{"label": 4, "start_offset": 0, "end_offset": 3, "user": 1}, {"label": 4, "start_offset": 5, "end_offset": 8, "user": 1}, {"label": 4, "start_offset": 9, "end_offset": 14, "user": 1}, {"label": 4, "start_offset": 15, "end_offset": 17, "user": 1}, {"label": 4, "start_offset": 18, "end_offset": 22, "user": 1}, {"label": 4, "start_offset": 23, "end_offset": 27, "user": 1}, {"label": 4, "start_offset": 28, "end_offset": 30, "user": 1}, {"label": 4, "start_offset": 31, "end_offset": 32, "user": 1}, {"label": 4, "start_offset": 33, "end_offset": 40, "user": 1}, {"label": 4, "start_offset": 41, "end_offset": 52, "user": 1}, {"label": 4, "start_offset": 54, "end_offset": 57, "user": 1}, {"label": 4, "start_offset": 58, "end_offset": 67, "user": 1}, {"label": 4, "start_offset": 69, "end_offset": 72, "user": 1}, {"label": 4, "start_offset": 73, "end_offset": 77, "user": 1}, {"label": 4, "start_offset": 78, "end_offset": 82, "user": 1}, {"label": 4, "start_offset": 83, "end_offset": 93, "user": 1}, {"label": 2, "start_offset": 94, "end_offset": 112, "user": 1}], "meta": {}}
{"id": 36, "text": "The issue seems to come from a call to Trackable._gather_saveables_for_checkpoint which is not overridden by tf.Module or AutoTrackable.", "annotations": [{"label": 4, "start_offset": 0, "end_offset": 3, "user": 1}, {"label": 4, "start_offset": 4, "end_offset": 9, "user": 1}, {"label": 4, "start_offset": 10, "end_offset": 15, "user": 1}, {"label": 4, "start_offset": 16, "end_offset": 18, "user": 1}, {"label": 4, "start_offset": 19, "end_offset": 23, "user": 1}, {"label": 4, "start_offset": 24, "end_offset": 28, "user": 1}, {"label": 4, "start_offset": 29, "end_offset": 30, "user": 1}, {"label": 4, "start_offset": 31, "end_offset": 35, "user": 1}, {"label": 4, "start_offset": 36, "end_offset": 38, "user": 1}, {"label": 2, "start_offset": 39, "end_offset": 81, "user": 1}, {"label": 4, "start_offset": 82, "end_offset": 87, "user": 1}, {"label": 4, "start_offset": 88, "end_offset": 90, "user": 1}, {"label": 4, "start_offset": 91, "end_offset": 94, "user": 1}, {"label": 4, "start_offset": 95, "end_offset": 105, "user": 1}, {"label": 4, "start_offset": 106, "end_offset": 108, "user": 1}, {"label": 2, "start_offset": 109, "end_offset": 118, "user": 1}, {"label": 2, "start_offset": 122, "end_offset": 135, "user": 1}, {"label": 4, "start_offset": 119, "end_offset": 121, "user": 1}], "meta": {}}
{"id": 37, "text": "The docs for tf.train.Saver call for a list/dict of SaveableObject, which AutoTrackable is not, but it seems odd that it isn't. It is possible that I am misunderstanding the SaveableObject/Saver API, but I do feel like AutoTrackable should be compatible tf.train.Saver.", "annotations": [{"label": 4, "start_offset": 0, "end_offset": 3, "user": 1}, {"label": 4, "start_offset": 4, "end_offset": 8, "user": 1}, {"label": 4, "start_offset": 9, "end_offset": 12, "user": 1}, {"label": 2, "start_offset": 13, "end_offset": 27, "user": 1}, {"label": 4, "start_offset": 28, "end_offset": 32, "user": 1}, {"label": 4, "start_offset": 33, "end_offset": 36, "user": 1}, {"label": 4, "start_offset": 37, "end_offset": 38, "user": 1}, {"label": 4, "start_offset": 39, "end_offset": 48, "user": 1}, {"label": 4, "start_offset": 49, "end_offset": 51, "user": 1}, {"label": 2, "start_offset": 52, "end_offset": 66, "user": 1}, {"label": 4, "start_offset": 68, "end_offset": 73, "user": 1}, {"label": 2, "start_offset": 74, "end_offset": 87, "user": 1}, {"label": 4, "start_offset": 88, "end_offset": 90, "user": 1}, {"label": 4, "start_offset": 91, "end_offset": 94, "user": 1}, {"label": 4, "start_offset": 96, "end_offset": 99, "user": 1}, {"label": 4, "start_offset": 100, "end_offset": 102, "user": 1}, {"label": 4, "start_offset": 103, "end_offset": 108, "user": 1}, {"label": 4, "start_offset": 109, "end_offset": 112, "user": 1}, {"label": 4, "start_offset": 113, "end_offset": 117, "user": 1}, {"label": 4, "start_offset": 118, "end_offset": 120, "user": 1}, {"label": 4, "start_offset": 121, "end_offset": 126, "user": 1}, {"label": 4, "start_offset": 128, "end_offset": 130, "user": 1}, {"label": 4, "start_offset": 131, "end_offset": 133, "user": 1}, {"label": 4, "start_offset": 134, "end_offset": 142, "user": 1}, {"label": 4, "start_offset": 143, "end_offset": 147, "user": 1}, {"label": 4, "start_offset": 148, "end_offset": 149, "user": 1}, {"label": 4, "start_offset": 150, "end_offset": 152, "user": 1}, {"label": 4, "start_offset": 153, "end_offset": 169, "user": 1}, {"label": 4, "start_offset": 170, "end_offset": 173, "user": 1}, {"label": 4, "start_offset": 174, "end_offset": 194, "user": 1}, {"label": 4, "start_offset": 195, "end_offset": 198, "user": 1}, {"label": 4, "start_offset": 200, "end_offset": 203, "user": 1}, {"label": 4, "start_offset": 204, "end_offset": 205, "user": 1}, {"label": 4, "start_offset": 206, "end_offset": 208, "user": 1}, {"label": 4, "start_offset": 209, "end_offset": 213, "user": 1}, {"label": 4, "start_offset": 214, "end_offset": 218, "user": 1}, {"label": 2, "start_offset": 219, "end_offset": 232, "user": 1}, {"label": 4, "start_offset": 233, "end_offset": 239, "user": 1}, {"label": 4, "start_offset": 240, "end_offset": 242, "user": 1}, {"label": 4, "start_offset": 243, "end_offset": 253, "user": 1}, {"label": 2, "start_offset": 254, "end_offset": 268, "user": 1}], "meta": {}}
{"id": 38, "text": "Please use tf.train.Checkpoint rather than tf.train.Saver to save objects: https://www.tensorflow.org/beta/guide/checkpoints (the guide is for 2.x, but the APIs are in 1.x as well).", "annotations": [{"label": 4, "start_offset": 0, "end_offset": 6, "user": 1}, {"label": 4, "start_offset": 7, "end_offset": 10, "user": 1}, {"label": 2, "start_offset": 11, "end_offset": 30, "user": 1}, {"label": 4, "start_offset": 31, "end_offset": 37, "user": 1}, {"label": 4, "start_offset": 38, "end_offset": 42, "user": 1}, {"label": 2, "start_offset": 43, "end_offset": 57, "user": 1}, {"label": 4, "start_offset": 58, "end_offset": 60, "user": 1}, {"label": 4, "start_offset": 61, "end_offset": 65, "user": 1}, {"label": 4, "start_offset": 66, "end_offset": 73, "user": 1}, {"label": 4, "start_offset": 75, "end_offset": 124, "user": 1}, {"label": 4, "start_offset": 126, "end_offset": 129, "user": 1}, {"label": 4, "start_offset": 130, "end_offset": 135, "user": 1}, {"label": 4, "start_offset": 136, "end_offset": 138, "user": 1}, {"label": 4, "start_offset": 139, "end_offset": 142, "user": 1}, {"label": 4, "start_offset": 143, "end_offset": 146, "user": 1}, {"label": 4, "start_offset": 148, "end_offset": 151, "user": 1}, {"label": 4, "start_offset": 152, "end_offset": 155, "user": 1}, {"label": 4, "start_offset": 156, "end_offset": 160, "user": 1}, {"label": 4, "start_offset": 161, "end_offset": 164, "user": 1}, {"label": 4, "start_offset": 165, "end_offset": 167, "user": 1}, {"label": 4, "start_offset": 168, "end_offset": 171, "user": 1}, {"label": 4, "start_offset": 172, "end_offset": 174, "user": 1}, {"label": 4, "start_offset": 175, "end_offset": 179, "user": 1}], "meta": {}}
{"id": 39, "text": "There is a mismatch in the name of libtensorflow_framework and the tf.sysconfig.get_link_flag name. As an example TF-Addons uses this to link with tensorflow core.", "annotations": [{"label": 4, "start_offset": 0, "end_offset": 5, "user": 1}, {"label": 4, "start_offset": 6, "end_offset": 8, "user": 1}, {"label": 4, "start_offset": 9, "end_offset": 10, "user": 1}, {"label": 4, "start_offset": 11, "end_offset": 19, "user": 1}, {"label": 4, "start_offset": 20, "end_offset": 22, "user": 1}, {"label": 4, "start_offset": 23, "end_offset": 26, "user": 1}, {"label": 4, "start_offset": 27, "end_offset": 31, "user": 1}, {"label": 4, "start_offset": 32, "end_offset": 34, "user": 1}, {"label": 2, "start_offset": 35, "end_offset": 58, "user": 1}, {"label": 4, "start_offset": 59, "end_offset": 62, "user": 1}, {"label": 4, "start_offset": 63, "end_offset": 66, "user": 1}, {"label": 2, "start_offset": 67, "end_offset": 93, "user": 1}, {"label": 4, "start_offset": 94, "end_offset": 98, "user": 1}, {"label": 4, "start_offset": 100, "end_offset": 102, "user": 1}, {"label": 4, "start_offset": 103, "end_offset": 105, "user": 1}, {"label": 4, "start_offset": 106, "end_offset": 113, "user": 1}, {"label": 4, "start_offset": 114, "end_offset": 123, "user": 1}, {"label": 4, "start_offset": 124, "end_offset": 128, "user": 1}, {"label": 4, "start_offset": 129, "end_offset": 133, "user": 1}, {"label": 4, "start_offset": 134, "end_offset": 136, "user": 1}, {"label": 4, "start_offset": 137, "end_offset": 141, "user": 1}, {"label": 4, "start_offset": 142, "end_offset": 146, "user": 1}, {"label": 4, "start_offset": 147, "end_offset": 157, "user": 1}, {"label": 4, "start_offset": 158, "end_offset": 162, "user": 1}], "meta": {}}
{"id": 40, "text": "I am encountering serialization issues when trying to dump the config from a tf.keras.Model object without complex things like custom layers (or even Lambdas...).  The code worked well with tf 1.13.1 however in tf 1.1.4, json/yaml serialization fails, and to_yaml and model_from_yaml fails as well.", "annotations": [{"label": 4, "start_offset": 0, "end_offset": 1, "user": 1}, {"label": 4, "start_offset": 2, "end_offset": 4, "user": 1}, {"label": 4, "start_offset": 5, "end_offset": 17, "user": 1}, {"label": 4, "start_offset": 18, "end_offset": 31, "user": 1}, {"label": 4, "start_offset": 32, "end_offset": 38, "user": 1}, {"label": 4, "start_offset": 39, "end_offset": 43, "user": 1}, {"label": 4, "start_offset": 44, "end_offset": 50, "user": 1}, {"label": 4, "start_offset": 51, "end_offset": 53, "user": 1}, {"label": 4, "start_offset": 54, "end_offset": 58, "user": 1}, {"label": 4, "start_offset": 59, "end_offset": 62, "user": 1}, {"label": 2, "start_offset": 63, "end_offset": 69, "user": 1}, {"label": 4, "start_offset": 70, "end_offset": 74, "user": 1}, {"label": 4, "start_offset": 75, "end_offset": 76, "user": 1}, {"label": 2, "start_offset": 77, "end_offset": 91, "user": 1}, {"label": 4, "start_offset": 92, "end_offset": 98, "user": 1}, {"label": 4, "start_offset": 99, "end_offset": 106, "user": 1}, {"label": 4, "start_offset": 107, "end_offset": 114, "user": 1}, {"label": 4, "start_offset": 115, "end_offset": 121, "user": 1}, {"label": 4, "start_offset": 122, "end_offset": 126, "user": 1}, {"label": 4, "start_offset": 127, "end_offset": 133, "user": 1}, {"label": 4, "start_offset": 134, "end_offset": 140, "user": 1}, {"label": 4, "start_offset": 142, "end_offset": 144, "user": 1}, {"label": 4, "start_offset": 145, "end_offset": 149, "user": 1}, {"label": 4, "start_offset": 150, "end_offset": 160, "user": 1}, {"label": 4, "start_offset": 164, "end_offset": 167, "user": 1}, {"label": 4, "start_offset": 168, "end_offset": 172, "user": 1}, {"label": 4, "start_offset": 173, "end_offset": 179, "user": 1}, {"label": 4, "start_offset": 180, "end_offset": 184, "user": 1}, {"label": 4, "start_offset": 185, "end_offset": 189, "user": 1}, {"label": 4, "start_offset": 190, "end_offset": 192, "user": 1}, {"label": 4, "start_offset": 193, "end_offset": 199, "user": 1}, {"label": 4, "start_offset": 200, "end_offset": 207, "user": 1}, {"label": 4, "start_offset": 208, "end_offset": 210, "user": 1}, {"label": 4, "start_offset": 211, "end_offset": 213, "user": 1}, {"label": 4, "start_offset": 214, "end_offset": 219, "user": 1}, {"label": 4, "start_offset": 221, "end_offset": 230, "user": 1}, {"label": 4, "start_offset": 231, "end_offset": 244, "user": 1}, {"label": 4, "start_offset": 245, "end_offset": 250, "user": 1}, {"label": 4, "start_offset": 252, "end_offset": 255, "user": 1}, {"label": 2, "start_offset": 256, "end_offset": 263, "user": 1}, {"label": 4, "start_offset": 264, "end_offset": 267, "user": 1}, {"label": 2, "start_offset": 268, "end_offset": 283, "user": 1}, {"label": 4, "start_offset": 284, "end_offset": 289, "user": 1}, {"label": 4, "start_offset": 290, "end_offset": 292, "user": 1}, {"label": 4, "start_offset": 293, "end_offset": 297, "user": 1}], "meta": {}}
{"id": 49, "text": "After #19228 , setting batch_size=None (and batch_sampler=None) disables autobatching (auto collation) and advanced use cases can handle batching themselves.", "annotations": [{"label": 4, "start_offset": 0, "end_offset": 5, "user": 1}, {"label": 4, "start_offset": 6, "end_offset": 13, "user": 1}, {"label": 4, "start_offset": 15, "end_offset": 22, "user": 1}, {"label": 2, "start_offset": 23, "end_offset": 38, "user": 1}, {"label": 4, "start_offset": 40, "end_offset": 43, "user": 1}, {"label": 2, "start_offset": 44, "end_offset": 62, "user": 1}, {"label": 4, "start_offset": 64, "end_offset": 72, "user": 1}, {"label": 4, "start_offset": 73, "end_offset": 85, "user": 1}, {"label": 4, "start_offset": 87, "end_offset": 91, "user": 1}, {"label": 4, "start_offset": 92, "end_offset": 101, "user": 1}, {"label": 4, "start_offset": 103, "end_offset": 106, "user": 1}, {"label": 4, "start_offset": 107, "end_offset": 115, "user": 1}, {"label": 4, "start_offset": 116, "end_offset": 119, "user": 1}, {"label": 4, "start_offset": 120, "end_offset": 125, "user": 1}, {"label": 4, "start_offset": 126, "end_offset": 129, "user": 1}, {"label": 4, "start_offset": 130, "end_offset": 136, "user": 1}, {"label": 4, "start_offset": 137, "end_offset": 145, "user": 1}, {"label": 4, "start_offset": 146, "end_offset": 156, "user": 1}], "meta": {}}
{"id": 83, "text": "I have a tf.data.Dataset that I want to write to tfrecord files. to do this, I currently use tf.python_io.TFRecordWriter to do this, but would like to use tf.data.experimental.TFRecordWriter, as it would be more efficient to also do the writing as part of the dataset graph execution.", "annotations": [{"label": 4, "start_offset": 0, "end_offset": 1, "user": 1}, {"label": 4, "start_offset": 2, "end_offset": 6, "user": 1}, {"label": 4, "start_offset": 7, "end_offset": 8, "user": 1}, {"label": 2, "start_offset": 9, "end_offset": 24, "user": 1}, {"label": 4, "start_offset": 25, "end_offset": 29, "user": 1}, {"label": 4, "start_offset": 30, "end_offset": 31, "user": 1}, {"label": 4, "start_offset": 32, "end_offset": 36, "user": 1}, {"label": 4, "start_offset": 37, "end_offset": 39, "user": 1}, {"label": 4, "start_offset": 40, "end_offset": 45, "user": 1}, {"label": 4, "start_offset": 46, "end_offset": 48, "user": 1}, {"label": 4, "start_offset": 49, "end_offset": 57, "user": 1}, {"label": 4, "start_offset": 58, "end_offset": 63, "user": 1}, {"label": 4, "start_offset": 65, "end_offset": 67, "user": 1}, {"label": 4, "start_offset": 68, "end_offset": 70, "user": 1}, {"label": 4, "start_offset": 71, "end_offset": 75, "user": 1}, {"label": 4, "start_offset": 77, "end_offset": 78, "user": 1}, {"label": 4, "start_offset": 79, "end_offset": 88, "user": 1}, {"label": 4, "start_offset": 89, "end_offset": 92, "user": 1}, {"label": 2, "start_offset": 93, "end_offset": 120, "user": 1}, {"label": 4, "start_offset": 121, "end_offset": 123, "user": 1}, {"label": 4, "start_offset": 124, "end_offset": 126, "user": 1}, {"label": 4, "start_offset": 127, "end_offset": 131, "user": 1}, {"label": 4, "start_offset": 133, "end_offset": 136, "user": 1}, {"label": 4, "start_offset": 137, "end_offset": 142, "user": 1}, {"label": 4, "start_offset": 143, "end_offset": 147, "user": 1}, {"label": 4, "start_offset": 148, "end_offset": 150, "user": 1}, {"label": 4, "start_offset": 151, "end_offset": 154, "user": 1}, {"label": 2, "start_offset": 155, "end_offset": 190, "user": 1}, {"label": 4, "start_offset": 192, "end_offset": 194, "user": 1}, {"label": 4, "start_offset": 195, "end_offset": 197, "user": 1}, {"label": 4, "start_offset": 198, "end_offset": 203, "user": 1}, {"label": 4, "start_offset": 204, "end_offset": 206, "user": 1}, {"label": 4, "start_offset": 207, "end_offset": 211, "user": 1}, {"label": 4, "start_offset": 212, "end_offset": 221, "user": 1}, {"label": 4, "start_offset": 222, "end_offset": 224, "user": 1}, {"label": 4, "start_offset": 225, "end_offset": 229, "user": 1}, {"label": 4, "start_offset": 230, "end_offset": 232, "user": 1}, {"label": 4, "start_offset": 233, "end_offset": 236, "user": 1}, {"label": 4, "start_offset": 237, "end_offset": 244, "user": 1}, {"label": 4, "start_offset": 245, "end_offset": 247, "user": 1}, {"label": 4, "start_offset": 248, "end_offset": 252, "user": 1}, {"label": 4, "start_offset": 253, "end_offset": 255, "user": 1}, {"label": 4, "start_offset": 256, "end_offset": 259, "user": 1}, {"label": 4, "start_offset": 260, "end_offset": 267, "user": 1}, {"label": 4, "start_offset": 268, "end_offset": 273, "user": 1}, {"label": 4, "start_offset": 274, "end_offset": 283, "user": 1}], "meta": {}}
{"id": 81, "text": "torch.lu_solve gives an unintuitive error message when the inputs are not batched", "annotations": [{"label": 2, "start_offset": 0, "end_offset": 14, "user": 1}, {"label": 4, "start_offset": 15, "end_offset": 20, "user": 1}, {"label": 4, "start_offset": 21, "end_offset": 23, "user": 1}, {"label": 4, "start_offset": 24, "end_offset": 35, "user": 1}, {"label": 4, "start_offset": 36, "end_offset": 41, "user": 1}, {"label": 4, "start_offset": 42, "end_offset": 49, "user": 1}, {"label": 4, "start_offset": 50, "end_offset": 54, "user": 1}, {"label": 4, "start_offset": 55, "end_offset": 58, "user": 1}, {"label": 4, "start_offset": 59, "end_offset": 65, "user": 1}, {"label": 4, "start_offset": 66, "end_offset": 69, "user": 1}, {"label": 4, "start_offset": 70, "end_offset": 73, "user": 1}, {"label": 4, "start_offset": 74, "end_offset": 81, "user": 1}], "meta": {}}